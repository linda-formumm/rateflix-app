name: tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    environment: Testing

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          coverage: xdebug

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install Node Dependencies
        run: npm i

      - name: Add Flux Credentials Loaded From ENV
        run: composer config http-basic.composer.fluxui.dev "${{ secrets.FLUX_USERNAME }}" "${{ secrets.FLUX_LICENSE_KEY }}"

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Set Testing Environment
        run: sed -i 's/APP_ENV=local/APP_ENV=testing/' .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Set Testing Environment
        run: |
          echo "APP_URL=http://localhost" >> $GITHUB_ENV
          echo "ASSET_URL=http://localhost" >> $GITHUB_ENV

      - name: Build Assets
        run: |
          npm run build
          # Copy Vite manifest to expected location for Laravel
          if [ -f "public/build/.vite/manifest.json" ]; then
            cp public/build/.vite/manifest.json public/build/manifest.json
            echo "Copied Vite manifest to Laravel expected location"
          else
            # Create fallback manifest for testing
            mkdir -p public/build
            echo '{"resources/css/app.css":{"file":"assets/app.css","src":"resources/css/app.css","isEntry":true},"resources/js/app.js":{"file":"assets/app.js","src":"resources/js/app.js","isEntry":true}}' > public/build/manifest.json
            mkdir -p public/build/assets
            touch public/build/assets/app.css
            touch public/build/assets/app.js
            echo "Created fallback manifest for testing"
          fi
          # Show what we have
          ls -la public/build/
          echo "Manifest content:"
          cat public/build/manifest.json

      - name: Run Tests
        run: ./vendor/bin/pest
